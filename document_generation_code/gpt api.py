# gpt api
import pandas as pd
from pathlib import Path
from openai import OpenAI
import re, json, csv, os
from pathlib import Path
from typing import List, Dict


# 필요한 패키지: pip install openai


company = f"""
회사정보
<br>

<회사 개요>

회사명: ㈜한빛솔루션 (Hanbit Solutions Inc.)

설립연도: 2018년

본사위치: 경기도 성남시 분당구

기업형태: 중소기업

주요업종: 스마트팩토리 솔루션 개발 및 구축

주요고객층: 중소·중견 제조기업, 공공기관

기업 슬로건: "작은 변화가 만드는 거대한 효율, 한빛솔루션이 함께합니다."

<br>

<성장 배경>

㈜한빛솔루션은 4차 산업혁명 시대의 흐름 속에서 중소 제조기업들이 겪는 생산성 저하, 인력난, 품질 관리 문제 해결을 목표로 2018년 설립되었습니다. 초기에는 단순 생산 관리 시스템(MES) 구축에 집중했지만, 고객들의 다양한 요구와 기술 발전에 맞춰 빅데이터 분석, 인공지능(AI) 기반 예측 유지보수, 로봇 자동화 연동 등 스마트팩토리 토탈 솔루션으로 사업 영역을 빠르게 확장했습니다. 정부의 스마트팩토리 보급 확산 정책과 맞물려 매년 20% 이상의 가파른 성장을 기록하며, 업계 내 기술력 있는 강소기업으로 자리매김했습니다.

<br>

<조직 구성 및 역할>

인사부: 회사의 인적 자원 관리 및 조직 문화 구축을 담당합니다. 신규 인력 채용, 교육, 성과 관리, 직원 복지 프로그램을 기획하고 실행합니다.

생산부: 소프트웨어 솔루션 개발 및 하드웨어 제작을 담당합니다. 개발된 솔루션을 실제 고객 환경에 맞게 커스터마이징하고, 필요한 경우 제어 장비나 센서 등의 하드웨어 부품을 생산 또는 조달하는 역할을 수행합니다.

관리부: 회사의 재무, 회계, 법무, 총무 등 행정 및 지원 업무를 총괄합니다. 안정적인 회사 운영을 위한 예산 관리와 법규 준수를 책임지며, 직원들이 업무에 집중할 수 있도록 지원하는 핵심 부서입니다.

영업부: 신규 고객 발굴 및 기존 고객과의 관계 유지를 담당합니다. 시장 동향을 분석하고, 고객의 요구사항을 파악하여 최적의 솔루션을 제안하며 계약을 성사시킵니다.

기술부: 솔루션 구축 및 기술 지원을 담당합니다. 고객 현장에 직접 방문하여 시스템을 설치하고, 문제 발생 시 즉각적인 기술 지원과 유지보수를 제공합니다. 고객 만족도를 극대화하는 데 중요한 역할을 합니다.

<br>

<주요 제품 & 서비스>

한빛 스마트MES: 생산 계획, 공정 관리, 품질, 설비, 자재 등 생산 전반을 실시간으로 통합 관리하는 솔루션입니다. 생산 현장의 데이터를 수집하고 분석하여 생산 효율을 극대화합니다.

한빛 AI-CPS (사이버물리시스템): AI 기반의 예측 분석 기술을 적용한 솔루션으로, 설비의 고장 징후를 사전에 감지하여 예측 유지보수를 가능하게 합니다. 갑작스러운 생산 중단을 방지하여 가동률을 높입니다.

한빛 데이터 솔루션: 생산 현장에서 발생하는 방대한 데이터를 수집, 정제, 분석하여 의미 있는 인사이트를 제공하는 맞춤형 데이터 분석 서비스입니다.

<br>

<시장 입지>

㈜한빛솔루션은 스마트팩토리 시장에서 특히 중소·중견기업을 위한 맞춤형 솔루션 제공에 강점을 가지고 있습니다. 대기업 위주의 고비용 솔루션 시장과 달리, 합리적인 비용과 유연한 커스터마이징으로 고객사의 만족도가 높습니다. 특히 기술부의 신속하고 전문적인 사후 관리 서비스는 고객사들 사이에서 높은 평가를 받고 있습니다. 이를 통해 중소기업 스마트팩토리 솔루션 분야에서 선두 주자로서의 입지를 확고히 다지고 있습니다.

<br>

<향후 전략>

기술 고도화: AI 및 머신러닝 기술 연구 개발에 대한 투자를 확대하여, 예측 유지보수 솔루션을 더욱 정교화하고, 무인 자동화 시스템과의 연동을 강화할 계획입니다.

시장 확대: 국내 시장에서의 성공을 발판 삼아, 동남아시아 등 해외 시장으로의 진출을 모색하고 있습니다. 현지 파트너사와의 협력을 통해 글로벌 스마트팩토리 솔루션 기업으로 성장하는 것을 목표로 합니다.

산학협력 강화: 유수 대학 및 연구 기관과의 협력을 통해 차세대 기술을 선제적으로 확보하고, 우수 인재를 영입하여 기술 경쟁력을 지속적으로 유지할 것입니다."""




employment = f"""
직원 명부
인사부

김민지 | 여성 | 1993-05-12 | 32 | 010-1234-5678 | kmj@hanbit.co.kr | 부장 | 기혼, 자녀1 | 경기도 성남시 분당구 판교동 123-45 | 930512-2345678 | 2018 | 7년 | 석사 | 8,500만원

박서준 | 남성 | 1988-11-20 | 37 | 010-9876-5432 | psj@hanbit.co.kr | 차장 | 기혼, 자녀2 | 경기도 성남시 분당구 서현동 67-89 | 881120-1789012 | 2019 | 6년 | 학사 | 7,200만원

이지은 | 여성 | 1995-02-28 | 30 | 010-2345-6789 | lje@hanbit.co.kr | 과장 | 미혼 | 경기도 성남시 분당구 정자동 10-11 | 950228-2123456 | 2021 | 4년 | 학사 | 6,000만원

최현우 | 남성 | 1997-09-05 | 28 | 010-7654-3210 | chw@hanbit.co.kr | 대리 | 미혼 | 경기도 성남시 분당구 이매동 12-13 | 970905-1987654 | 2022 | 3년 | 학사 | 5,200만원

김윤아 | 여성 | 1998-04-15 | 27 | 010-4567-8901 | kya@hanbit.co.kr | 사원 | 미혼 | 경기도 성남시 분당구 삼평동 14-15 | 980415-2654321 | 2023 | 2년 | 학사 | 4,500만원

정우성 | 남성 | 1999-07-22 | 26 | 010-8901-2345 | jws@hanbit.co.kr | 사원 | 미혼 | 경기도 성남시 분당구 구미동 16-17 | 990722-1456789 | 2024 | 1년 | 학사 | 4,200만원

홍길동 | 남성 | 1996-03-10 | 29 | 010-1122-3344 | hgd@hanbit.co.kr | 사원 | 미혼 | 경기도 성남시 분당구 야탑동 18-19 | 960310-1998877 | 2024 | 1년 | 학사 | 4,200만원

강민정 | 여성 | 1994-08-01 | 31 | 010-5566-7788 | kmj2@hanbit.co.kr | 사원 | 기혼 | 경기도 성남시 분당구 백현동 20-21 | 940801-2876543 | 2023 | 2년 | 학사 | 4,500만원

생산부

박지훈 | 남성 | 1985-06-18 | 40 | 010-3344-5566 | pjh@hanbit.co.kr | 부장 | 기혼, 자녀2 | 경기도 용인시 수지구 풍덕천동 22-23 | 850618-1234567 | 2018 | 7년 | 석사 | 8,800만원

송혜교 | 여성 | 1989-01-25 | 36 | 010-7788-9900 | shk@hanbit.co.kr | 차장 | 기혼, 자녀1 | 경기도 용인시 수지구 성복동 24-25 | 890125-2456789 | 2019 | 6년 | 학사 | 7,500만원

강동원 | 남성 | 1994-10-03 | 31 | 010-2211-4455 | kdw@hanbit.co.kr | 과장 | 미혼 | 경기도 용인시 기흥구 보정동 26-27 | 941003-1678901 | 2020 | 5년 | 학사 | 6,300만원

신민아 | 여성 | 1996-05-21 | 29 | 010-6677-8899 | sma@hanbit.co.kr | 대리 | 미혼 | 경기도 용인시 기흥구 동백동 28-29 | 960521-2567890 | 2022 | 3년 | 학사 | 5,400만원

유아인 | 남성 | 1998-08-11 | 27 | 010-9900-1122 | yai@hanbit.co.kr | 사원 | 미혼 | 경기도 용인시 기흥구 서농동 30-31 | 980811-1789012 | 2023 | 2년 | 학사 | 4,700만원

한효주 | 여성 | 1999-12-04 | 26 | 010-5544-3322 | hhj@hanbit.co.kr | 사원 | 미혼 | 경기도 용인시 수지구 신봉동 32-33 | 991204-2345678 | 2024 | 1년 | 학사 | 4,400만원

김태희 | 여성 | 1995-07-29 | 30 | 010-1199-8877 | kth@hanbit.co.kr | 사원 | 미혼 | 경기도 용인시 수지구 동천동 34-35 | 950729-2890123 | 2024 | 1년 | 학사 | 4,400만원

장동건 | 남성 | 1997-04-14 | 28 | 010-4455-6677 | jdg@hanbit.co.kr | 사원 | 미혼 | 경기도 용인시 기흥구 영덕동 36-37 | 970414-1654321 | 2023 | 2년 | 학사 | 4,700만원

관리부

이병헌 | 남성 | 1983-09-08 | 42 | 010-1234-9876 | lbh@hanbit.co.kr | 부장 | 기혼, 자녀2 | 경기도 성남시 분당구 판교동 38-39 | 830908-1567890 | 2018 | 7년 | 석사 | 8,200만원

김혜수 | 여성 | 1987-11-29 | 38 | 010-9876-1234 | khs@hanbit.co.kr | 차장 | 미혼 | 경기도 성남시 분당구 정자동 40-41 | 871129-2345678 | 2019 | 6년 | 학사 | 7,000만원

소지섭 | 남성 | 1993-01-17 | 32 | 010-4567-1234 | sjs@hanbit.co.kr | 과장 | 미혼 | 경기도 성남시 분당구 서현동 42-43 | 930117-1567890 | 2020 | 5년 | 학사 | 5,900만원

하지원 | 여성 | 1995-03-24 | 30 | 010-7890-1234 | hjw@hanbit.co.kr | 대리 | 미혼 | 경기도 성남시 분당구 삼평동 44-45 | 950324-2890123 | 2021 | 4년 | 학사 | 5,100만원

공유 | 남성 | 1998-06-19 | 27 | 010-1111-2222 | gyu@hanbit.co.kr | 사원 | 미혼 | 경기도 성남시 분당구 백현동 46-47 | 980619-1456789 | 2023 | 2년 | 학사 | 4,600만원

박보영 | 여성 | 1999-10-31 | 26 | 010-3333-4444 | pby@hanbit.co.kr | 사원 | 미혼 | 경기도 성남시 분당구 이매동 48-49 | 991031-2901234 | 2024 | 1년 | 학사 | 4,300만원

조인성 | 남성 | 1997-02-09 | 28 | 010-5555-6666 | jis@hanbit.co.kr | 사원 | 미혼 | 경기도 성남시 분당구 구미동 50-51 | 970209-1789012 | 2024 | 1년 | 학사 | 4,300만원

이효리 | 여성 | 1994-05-18 | 31 | 010-7777-8888 | lhr@hanbit.co.kr | 사원 | 미혼 | 경기도 성남시 분당구 야탑동 52-53 | 940518-2654321 | 2023 | 2년 | 학사 | 4,600만원

영업부

현빈 | 남성 | 1984-04-20 | 41 | 010-1212-3434 | hbin@hanbit.co.kr | 부장 | 기혼, 자녀1 | 경기도 광주시 오포읍 능평리 54-55 | 840420-1345678 | 2018 | 7년 | 석사 | 8,900만원

손예진 | 여성 | 1986-01-11 | 39 | 010-5656-7878 | syj@hanbit.co.kr | 차장 | 기혼, 자녀1 | 경기도 광주시 오포읍 신현리 56-57 | 860111-2567890 | 2019 | 6년 | 학사 | 7,700만원

송중기 | 남성 | 1992-09-19 | 33 | 010-9090-1212 | sjg@hanbit.co.kr | 과장 | 미혼 | 경기도 광주시 태전동 58-59 | 920919-1789012 | 2020 | 5년 | 학사 | 6,500만원

윤아 | 여성 | 1994-05-30 | 31 | 010-3434-5656 | yoon@hanbit.co.kr | 대리 | 미혼 | 경기도 광주시 초월읍 지월리 60-61 | 940530-2456789 | 2021 | 4년 | 학사 | 5,600만원

이민호 | 남성 | 1996-06-22 | 29 | 010-7878-9090 | lmh@hanbit.co.kr | 사원 | 미혼 | 경기도 광주시 남한산성면 산성리 62-63 | 960622-1987654 | 2023 | 2년 | 학사 | 4,900만원

배수지 | 여성 | 1998-03-01 | 27 | 010-1212-3434 | bsz@hanbit.co.kr | 사원 | 미혼 | 경기도 광주시 퇴촌면 영동리 64-65 | 980301-2654321 | 2024 | 1년 | 학사 | 4,600만원

남주혁 | 남성 | 1997-08-08 | 28 | 010-5656-7878 | njh@hanbit.co.kr | 사원 | 미혼 | 경기도 광주시 곤지암읍 봉현리 66-67 | 970808-1321456 | 2024 | 1년 | 학사 | 4,600만원

서강준 | 남성 | 1995-10-12 | 30 | 010-9090-1212 | sgj@hanbit.co.kr | 사원 | 미혼 | 경기도 광주시 도척면 방도리 68-69 | 951012-1987654 | 2023 | 2년 | 학사 | 4,900만원

기술부

원빈 | 남성 | 1982-11-10 | 43 | 010-3456-7890 | wbin@hanbit.co.kr | 부장 | 기혼, 자녀2 | 경기도 안양시 동안구 비산동 70-71 | 821110-1234567 | 2018 | 7년 | 석사 | 9,200만원

전지현 | 여성 | 1985-02-15 | 40 | 010-8901-2345 | jjh@hanbit.co.kr | 차장 | 기혼, 자녀1 | 경기도 안양시 동안구 평촌동 72-73 | 850215-2456789 | 2019 | 6년 | 학사 | 8,000만원

정우성 | 남성 | 1991-07-28 | 34 | 010-4567-8901 | jws2@hanbit.co.kr | 과장 | 미혼 | 경기도 안양시 만안구 안양동 74-75 | 910728-1678901 | 2020 | 5년 | 학사 | 6,800만원

이정재 | 남성 | 1993-09-01 | 32 | 010-7890-1234 | ljj@hanbit.co.kr | 대리 | 미혼 | 경기도 안양시 동안구 호계동 76-77 | 930901-1987654 | 2021 | 4년 | 학사 | 5,900만원

김우빈 | 남성 | 1995-12-05 | 30 | 010-1122-3344 | kwb@hanbit.co.kr | 사원 | 미혼 | 경기도 안양시 만안구 박달동 78-79 | 951205-1890123 | 2023 | 2년 | 학사 | 5,100만원

박신혜 | 여성 | 1997-03-29 | 28 | 010-5566-7788 | psh@hanbit.co.kr | 사원 | 미혼 | 경기도 안양시 동안구 관양동 80-81 | 970329-2654321 | 2024 | 1년 | 학사 | 4,800만원

송강 | 남성 | 1999-01-20 | 26 | 010-9900-1122 | skg@hanbit.co.kr | 사원 | 미혼 | 경기도 안양시 만안구 석수동 82-83 | 990120-1321456 | 2024 | 1년 | 학사 | 4,800만원

임윤아 | 여성 | 1996-06-15 | 29 | 010-2233-4455 | yoon2@hanbit.co.kr | 사원 | 미혼 | 경기도 안양시 동안구 범계동 84-85 | 960615-2789012 | 2023 | 2년 | 학사 | 5,100만원

직원 명부 끝
"""



### 사내 문건 보고서 정보 ###
document_form = f"""
1. 
유형: 보고서
공통 주요 내용: 문서번호, 작성일자, 처리기한, 시행일자, 보고자, 제목, 주요내용, 주관부서, 기안 책임자, 업무 협력 부서
부서: 공통(모든 부서)
2.
유형: 기안서
공통 주요 내용: 문서번호, 작성부서, 협력부서, 기안자/작성자, 보존년한, 성명·직위·사번·연락처, 검토자(책임자), 기안일자, 결제일자, 제목, 배경, 주요 내용, 기대효과, 리스크 및 대안, 예상비용, 일정, 근거 규정(계약, 판결, 사내규정 조항), 관련 문서번호, 첨부 목록
부서: 공통(모든 부서)
3.
유형: 지침서/매뉴얼
공통 주요 내용: 문서명, 제목, 문서번호, 개정번호, 작성부서, 작성자, 검토자, 승인자(성명·직위), 시행일자, 목적, 적용 범위, 용어 정의, 부서별 책임자, 담당자 직위/직무, 절차 및 방법, 관련 서식, 관련 규정/법규, 첨부자료, 개정이력
부서: 공통(모든 부서)
4.
유형: 공문(내부)
공통 주요 내용: 문서번호, 작성일자, 처리기한, 회신 요청일, 수신 부서/수신자, 참조부서/참조자, 작성 부서명, 작성자 이름 및 직위, 기안 책임자 이름 및 직위, 연락처(내선·이메일), 제목, 주요 내용, 첨부 자료, 결재선, 회신 방식 및 기한, 담당자 지정
부서: 공통(모든 부서)

5.
유형: 예산안 / 예산집행 보고서
공통 주요 내용: 작성자/검토자/승인자 이름·직위, 예산 항목, 금액, 집행 현황, 잔액, 작성일, 처리기한
부서: 재무 관련 문서
6.
유형: 자금 관리 보고서
공통 주요 내용: 담당자 이름·직위·연락처, 계좌별 잔액, 입출금 내역, 자금 계획, 작성일, 결재선
부서: 재무 관련 문서
7.
유형: 품질 검사(QC) 보고서
공통 주요 내용: 검사자 이름, 사번, 검사 일자, 제품 코드, 검사 항목, 합격/불합격 여부, 불량 원인, 첨부 사진/자료, 결재선
부서: 생산 관련 문서
8.
유형: 생산 성과 보고서 / KPI 보고서
공통 주요 내용: 담당자 이름, 사번, 생산량, 생산 효율, 불량률, 작업자별 실적, 작성일, 기안자/검토자
부서: 생산 관련 문서
9.
유형: 안전 사고/사고 보고서
공통 주요 내용: 사고자 이름, 사번, 연락처, 응급 연락처, 사고 일시, 장소, 상황, 부상 정도, 조치 내용, 작성자, 승인자
부서: 생산 관련 문서
10.
유형: 영업 실적 보고서
공통 주요 내용: 작성자 이름, 사번, 연락처, 거래처별 매출, 수주 내역, 목표 대비 달성률, 작성일, 기안자, 승인자
부서: 영업 관련 문서
11.
유형: 고객사 관리 기록 / CRM 보고서
공통 주요 내용: 고객 담당자 이름, 연락처, 이메일, 거래처명, 담당자, 계약 내용, 상담 내역, 방문 일시, 작성자, 검토자
부서: 영업 관련 문서
12.
유형: 영업 회의 보고서 / 미팅 기록
공통 주요 내용: 참석자 이름, 사번, 연락처, 회의 일시, 참석자, 논의 내용, 결론 및 액션 아이템, 작성자, 승인자
부서: 영업 관련 문서
13.
유형: 고객 불만/클레임 처리 보고서
공통 주요 내용: 고객 이름, 연락처, 담당자 이름, 사번, 불만 내용, 처리 과정, 처리 결과, 대응 담당자, 작성일, 승인자
부서: 영업 관련 문서
14.
유형: 현장 점검 보고서 / 설비 점검 기록
공통 주요 내용: 점검 담당자 이름, 사번, 연락처, 점검 일시, 설비 번호, 점검 항목, 이상 유무, 조치 내용, 작성자, 승인자, 처리 기한
부서: 기술 관련 문서
15.
유형: 설비 개선/업그레이드 보고서
공통 주요 내용: 담당 엔지니어 이름, 사번, 개선 내용, 적용 설비, 작업 일시, 예상 효과, 테스트 결과, 작성일, 승인자
부서: 기술 관련 문서
16.
유형: 부서내 사내 메신저 기록
공통 주요 내용 : 부서내에서 일어나는 공적, 사적인 일에 관한 대화 로그 기록
부서: 공통(모든 부서)
17.
유형: 외부인과의 메일기록
공통 주요 내용 : 업무 관련 메일기록 (회사 내부 사람이 아닌 외부사람 에게도 발송이 가능함)
부서: 공통(모든 부서)
"""



#----------------------------------------------------------------------------------
#----------------------------------------------------------------------------------


WW_GPT_API_KEY ="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"




def generate_data(company, Department, target, n, document_form, api_key = WW_GPT_API_KEY):
    # OpenAI 클라이언트 (환경변수 OPENAI_API_KEY를 쓰려면 api_key 생략 가능)
    client = OpenAI(api_key=api_key)

    # ── 프롬프트 구성
    prompt3 = f"""
    회사정보 :"{company}"
    직원정보 :"{Department}"
    다음은 회사의 정보와 직원 리스트야.
    이 회사에서는 다양한 내부문건들이 생성되는데, 그 종류와 형태는 "{document_form}" 이렇게 구성되어있어.
    회사 정보와 직원 명부를 반영해서 내부문건을 현실성 있게 생성해줘.

    * 생성해야 하는 문서는 "{Department}"부서 중 '{target}'대상 문서 이며 해당 부서의 *1개*의 문서를 다양한 문서 종류로 생성 해야해.

    <추가정보>
    -개인정보 : 단 하나만으로도 특정 개인을 지칭하거나 추정할 수 있는 정보(이름, 주소, 주민번호 등)

    -준식별자 : 하나로는 특정 개인을 지칭할 수 없지만 여러 준식별정보가 결합하는 경우나, 소량의 준식별정보와 주변에 개인정보가 분포하는 경우.
    특정 개인을 지칭하거나 추정이 가능한 정보
    (직업, 시군구 주소, 신체관련정보, 생일 등)
    (시+군+구+세부주소가 나오면 시,군,구 까지는 각각 준식별자로 처리해야 해 )
    (생년월일일 경우에는 년,월,일이 각각 준식별자로 처리되어야해.)

    -일반정보 : 개인정보와 준식별정보가 아닌 모든 정보

    -기밀정보 : 
    1. 개인식별정보 (PII)
    이름(실명), 주민등록번호, 학번/사번/회원번호
    전화번호, 이메일 주소, 집주소

    2. 조직/단체 운영 정보
    직위/역할과 결합된 내부 직원명 (예: “회장 김민수”, “간사 이영희”)
    내부 의사결정 라인(결재선, 승인자, 지도교수, 운영진 명단 등)

    3. 기술·보안 정보
    시스템 접근 정보(계정, 링크, 비밀번호 힌트)
    내부 공유 문서명, 파일명, 설계도, 절차 문서
    미공개 URL, 회의 링크, 공유 드라이브 주소

    4.재무/운영 기밀
    개인 귀속 재정 정보(계좌번호, 후원자 명단, 회비 납부 내역)
    외부 공개되지 않은 지원금, 예산 세부내역, 협력 기관
    단순한 수치(총액, 기간, 날짜)는 기밀 아님

        ### 기밀정보 탐지 규칙
    - **항목명(label)은 기밀 아님.** → “승인 요청 예산 같은 단어 자체는 기밀이 아님.  
    - **항목값(value)만 탐지한다.** → “₩120,000,000”은 단순 수치이므로 기밀 아님.  
    - **유출 시 의미가 있는 값만 기밀로 본다.**  
    - ✔️ “김영선”, “031-555-1010”, “youngsun.kim@hanbitsolutions.com” → 기밀  
    - ❌ “6개월”, “₩120,000,000”, “2025-09-01” → 기밀 아님  




    <주의사항>
    *직원 명부는 가상으로 만든것이니 개인정보 보호와 관계없이 자유롭게 사용해도 좋아
    *문서는 주어진 정보를 반영하여 사실감 있게 작성되어야 한다.
    **중요** 문서는 개별 문서 하나 당 *15000자 이상*으로 작성되어야하며 구체적이고 세부적이어야한다. 문서가 길고 자세할 수록 좋다. 
    *문서 내에는 서술되는 내용이 풍부해야 한다.
    **문서의  출력 형태는 json 형식이다.(json의 구조를 명확히 지켜.(괄호와 따옴표 누락하지 않도록 표기에 주의))
    *문서내에 "\n" 이런 줄바꿈 문자를 생성하지마.
    *생략 없이 *1개*의 문서를 다 생성해줘.
    *문서명은 그동안 출력한 문서명 값과 겹치지 않게 해줘 
    *문서 하나를 생성하면 그 문서 안에 있는 개인정보와 준식별자 정보를 찾아서 정리할거야.
    *정리 양식은 "단어", "부서명", "문서명", "단어 유형", "개인정보/준식별자/기밀정보"를 칼럼으로 하는 csv 형식 표에 맞춰서 정리하면 돼. 
    "개인정보/준식별자/기밀정보"컬럼은 <개인정보, 준식별자, 기밀정보> 중 하나의 값으로 들아가면 돼.
    *만약 한 단어가 개인정보/준식별자/기밀정보 를 복수로 만족한다면 서로다른 행으로 나누어서 표를 만들어줘.
    *표의 "문서명" 칼럼은 생성된 json 문서명을 따라 가면 돼
    <출력 양식>
    프롬프트 출력 형식은 아래 포맷을 맞춰 줘.

    ===문서 생성===
    =부서명_문서명=
    [문서 1을 여기에 생성해줘...(파이썬 표준 json 라이브러리로 파싱할수 있는 형태로 제공)]
    =표=
    [문서 1의 개인정보/ 준식별자 표를 여기에 정리해줘.]

    ===문서 생성===
    =부서명_문서명=
    [문서 n-2를 여기에 생성해줘...(파이썬 표준 json 라이브러리로 파싱할수 있는 형태로 제공)]
    =표=
    [문서 n-2의 개인정보/ 준식별자 표를 여기에 정리해줘.]
    ...
    ===문서 생성===
    =부서명_문서명=
    [문서 n-1을 여기에 생성해줘...(파이썬 표준 json 라이브러리로 파싱할수 있는 형태로 제공)]
    =표=
    [문서 n-1의 개인정보/ 준식별자 표를 여기에 정리해줘.]

    ===문서 생성===
    =부서명_문서명=
    [문서 n을 여기에 생성해줘...(파이썬 표준 json 라이브러리로 파싱할수 있는 형태로 제공)]
    =표=
    [문서 n의 개인정보/ 준식별자 표를 여기에 정리해줘.]
    """

    # ── GPT(API) 호출
    response = client.responses.create(
        model="gpt-5",      # 필요에 따라 모델명 변경 가능 (예: "gpt-4.1-mini")
        input=prompt3,
        max_output_tokens=128000, # ← 여기서 최대 출력 토큰 수 설정 
    )

    # 원본 객체 로그(선택)
    print(response)

    # ↓↓↓ 바로 문자열로 변환
    form_log = response.output_text or ""

    # 텍스트 로그

    return form_log

#--------------------------------------------------------------


#-----------------------------------------

# 출력 폴더(원하면 바꾸세요)
OUT_DIR = Path(r"C:\Users\wan09\OneDrive\Desktop\code\data")
JSON_DIR = OUT_DIR / "json"
JSON_DIR.mkdir(parents=True, exist_ok=True)

HEADER = ["단어","부서명","문서명","단어 유형","개인정보/준식별자/기밀정보"]

def sanitize_filename(name: str) -> str:
    name = re.sub(r'[\\/:*?"<>|]+', '_', name)
    name = name.strip().strip('.')
    return name or "untitled"

def split_sections(raw: str) -> List[str]:
    raw = raw.replace("\r\n", "\n").replace("\r", "\n")
    parts = re.split(r'(?m)^\s*===\s*문서\s*생성\s*===\s*$', raw)
    return [p.strip() for p in parts if p.strip()]

def find_title(section: str):
    return re.search(r'(?m)^\s*=\s*(?P<title>[^=\n]+?)\s*=\s*$', section)

def find_table_marker(section: str):
    return re.search(r'(?m)^\s*=\s*표\s*=\s*$', section)

def extract_json_text(block: str) -> str:
    """
    API가 JSON으로 준다고 하셨으니 그대로 저장합니다.
    우선 ```json ... ``` 블록을 찾고, 없으면 블록에서 첫 '{' ~ 짝 '}'까지를 사용합니다.
    """
    m = re.search(r'```json\s*(.*?)```', block, flags=re.DOTALL|re.IGNORECASE)
    if m:
        return m.group(1).strip()
    m = re.search(r'```(?!json)\s*(.*?)```', block, flags=re.DOTALL|re.IGNORECASE)
    if m:
        return m.group(1).strip()
    start = block.find('{')
    if start == -1:
        raise ValueError("JSON 시작 '{' 를 찾지 못했습니다.")
    depth = 0
    for i, ch in enumerate(block[start:], start=start):
        if ch == '{':
            depth += 1
        elif ch == '}':
            depth -= 1
            if depth == 0:
                return block[start:i+1].strip()
    raise ValueError("JSON 닫는 '}' 를 찾지 못했습니다.")

def parse_table_to_df(table_text: str) -> pd.DataFrame:
    lines = [ln.strip() for ln in table_text.strip().splitlines() if ln.strip()]
    rows: List[List[str]] = []
    for ln in lines:
        if re.match(r'^\s*===\s*문서\s*생성\s*===\s*$', ln):  # 혹시 섞인 구분선 제거
            continue
        if re.match(r'^\s*=\s*표\s*=\s*$', ln):
            continue
        for parsed in csv.reader([ln], delimiter=',', quotechar='"'):
            rows.append([cell.strip() for cell in parsed])

    # 헤더 라인이 여러 번 섞여도 제거
    data_rows = [r for r in rows if [c.replace(" ", "") for c in r] != [h.replace(" ", "") for h in HEADER]]

    # 컬럼 개수 보정
    fixed = []
    for r in data_rows:
        if len(r) < len(HEADER):
            r = r + [""] * (len(HEADER) - len(r))
        else:
            r = r[:len(HEADER)]
        fixed.append(r)

    df = pd.DataFrame(fixed, columns=HEADER)
    return df

# ---------- 메인 처리 (form_log 사용) -------------------------------------------------
# 저장할 경로/파라미터 예시 (그대로 유지)

Department = "인사부, 개발부, 관리부, 영업부,기술부"  
n = 5      # 전체 부서 개수
target = "인사부"

for i in range(26):
    form_log = generate_data(company, Department, target, n, document_form, api_key=WW_GPT_API_KEY)
    all_tables: List[pd.DataFrame] = []
    dfs_by_title: Dict[str, pd.DataFrame] = {}  # 문서별 DF가 필요할 때 사용

    sections = split_sections(form_log)
    for sec in sections:
        m_title = find_title(sec)
        if not m_title:
            # 문서명 라인이 없는 섹션은 건너뜀
            continue
        title = m_title.group("title").strip()
        title_sanitized = sanitize_filename(title)

        m_table = find_table_marker(sec)
        if m_table:
            json_block = sec[m_title.end():m_table.start()]
            table_text = sec[m_table.end():]
        else:
            json_block = sec[m_title.end():]
            table_text = ""

        # (2) JSON 파일 저장 - 그대로 저장
        json_text = extract_json_text(json_block)
        obj = json.loads(json_text)  # API가 올바른 JSON이라 가정
        with open(JSON_DIR / f"{title_sanitized}.json", "w", encoding="utf-8") as f:
            json.dump(obj, f, ensure_ascii=False, indent=2)

        # (3) 표를 DF로 파싱
        if table_text.strip():
            df = parse_table_to_df(table_text)
            # 문서명 컬럼 보정(비어있거나 불일치할 수 있으므로 통일)
            if "문서명" in df.columns:
                if df["문서명"].nunique(dropna=False) != 1 or (df["문서명"].astype(str).str.strip() == "").any():
                    df["문서명"] = title
            else:
                df["문서명"] = title
                df = df.reindex(columns=HEADER)
            all_tables.append(df)
            dfs_by_title[title] = df.copy()

    # (4) 모든 문서 표를 concat → CSV 저장
    csv_path = None
    if all_tables:
        all_df = pd.concat(all_tables, ignore_index=True)
        all_df = all_df.reindex(columns=HEADER)
        all_df = all_df[all_df.apply(lambda r: any(str(x).strip() for x in r.values), axis=1)]
        csv_path = OUT_DIR / f"all_tables_{target}_{i+1}.csv"
        OUT_DIR.mkdir(parents=True, exist_ok=True)
        all_df.to_csv(csv_path, index=False, encoding="utf-8-sig")

    print(f"[완료] JSON 저장 경로: {JSON_DIR.resolve()}")
    if csv_path:
        print(f"[완료] 통합 CSV: {csv_path.resolve()}")
    else:
        print("[알림] 표 데이터가 없어 CSV는 생성되지 않았습니다.")

# 참고:
# - 문서별 표 DataFrame은 dfs_by_title[문서명] 에 들어있습니다.
# - 전체 병합 표는 변수 all_df (if created) 로 접근할 수 있습니다.
# === 여기까지 붙여넣기 끝 ===







#---------------------------------------------------------------
# 저장할 경로/파라미터 예시 (그대로 유지)

