import psycopg2
from psycopg2.extras import execute_values

def get_connection():
    return psycopg2.connect(
        host="localhost",
        port="5432",
        dbname="postgres",
        user="postgres",
        password="postgres"
    )

def create_tables():
    conn = get_connection()
    cursor = conn.cursor()
    for table in ["Í∞úÏù∏Ï†ïÎ≥¥", "Ï§ÄÏãùÎ≥ÑÏûê", "Í∏∞Î∞ÄÏ†ïÎ≥¥"]:
        cursor.execute(f"""
            CREATE TABLE IF NOT EXISTS {table} (
                Îã®Ïñ¥ TEXT,
                Î∂ÄÏÑúÎ™Ö TEXT,
                Î¨∏ÏÑúÎ™Ö TEXT,
                Îã®Ïñ¥Ïú†Ìòï TEXT,
                Íµ¨Î∂Ñ TEXT
            );
        """)
    conn.commit()
    cursor.close()
    conn.close()

def truncate_tables():
    conn = get_connection()
    cursor = conn.cursor()
    for table in ["Í∞úÏù∏Ï†ïÎ≥¥", "Ï§ÄÏãùÎ≥ÑÏûê", "Í∏∞Î∞ÄÏ†ïÎ≥¥"]:
        cursor.execute(f"TRUNCATE TABLE {table} RESTART IDENTITY;")
    conn.commit()
    cursor.close()
    conn.close()
    print("üóëÔ∏è Î™®Îì† ÌÖåÏù¥Î∏î Îç∞Ïù¥ÌÑ∞ Ï¥àÍ∏∞Ìôî ÏôÑÎ£å")


def add_rows(table_name, rows):
    conn = get_connection()
    cursor = conn.cursor()
    query = f"""
        INSERT INTO {table_name}
        (Îã®Ïñ¥, Î∂ÄÏÑúÎ™Ö, Î¨∏ÏÑúÎ™Ö, Îã®Ïñ¥Ïú†Ìòï, Íµ¨Î∂Ñ)
        VALUES %s
    """
    execute_values(cursor, query, rows)
    conn.commit()
    cursor.close()
    conn.close()

def delete_row(table_name, word):
    conn = get_connection()
    cursor = conn.cursor()
    cursor.execute(f"DELETE FROM {table_name} WHERE Îã®Ïñ¥ = %s", (word,))
    conn.commit()
    cursor.close()
    conn.close()

# ÌäπÏ†ï Îã®Ïñ¥Í∞Ä Ìè¨Ìï® Îêú Ìñâ Ï°∞Ìöå -> return ÌäπÏ†ï ÌñâÏùò Ï†ÑÏ≤¥ col value
def fetch_all(table_name):
    conn = get_connection()
    cursor = conn.cursor()
    cursor.execute(f"SELECT * FROM {table_name}") 
    rows = cursor.fetchall()
    cursor.close()
    conn.close()
    return rows

def fetch_rows(table_name, column_name, keyword):
    conn = get_connection()
    cursor = conn.cursor()
    query = f"SELECT * FROM {table_name} WHERE {column_name} LIKE %s"
    cursor.execute(query, (f"%{keyword}%",))
    rows = cursor.fetchall()
    cursor.close()
    conn.close()
    return rows



def cnt(table_name):
    conn = get_connection()
    cursor = conn.cursor()
    cursor.execute(f"SELECT count(*) FROM {table_name}")
    rows = cursor.fetchall()
    cursor.close()
    conn.close()
    return rows